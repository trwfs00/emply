// Generated by view binder compiler. Do not edit!
package com.example.emply.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.emply.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ApplicationItemLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageButton imgUser;

  @NonNull
  public final TextView txtInc;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final RelativeLayout userBar;

  private ApplicationItemLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageButton imgUser, @NonNull TextView txtInc, @NonNull TextView txtName,
      @NonNull TextView txtStatus, @NonNull RelativeLayout userBar) {
    this.rootView = rootView;
    this.imgUser = imgUser;
    this.txtInc = txtInc;
    this.txtName = txtName;
    this.txtStatus = txtStatus;
    this.userBar = userBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ApplicationItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ApplicationItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.application_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ApplicationItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgUser;
      AppCompatImageButton imgUser = ViewBindings.findChildViewById(rootView, id);
      if (imgUser == null) {
        break missingId;
      }

      id = R.id.txtInc;
      TextView txtInc = ViewBindings.findChildViewById(rootView, id);
      if (txtInc == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      id = R.id.userBar;
      RelativeLayout userBar = ViewBindings.findChildViewById(rootView, id);
      if (userBar == null) {
        break missingId;
      }

      return new ApplicationItemLayoutBinding((LinearLayout) rootView, imgUser, txtInc, txtName,
          txtStatus, userBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
